diff --git quickjs-clean/qjs.c quickjs-workdir/qjs.c
index d56b843..52b4a63 100644
--- quickjs-clean/qjs.c
+++ quickjs-workdir/qjs.c
@@ -148,6 +148,8 @@ static inline size_t js_trace_malloc_usable_size(void *ptr)
     return _msize(ptr);
 #elif defined(EMSCRIPTEN)
     return 0;
+#elif defined(__nyx__)
+    return 0;
 #elif defined(__linux__)
     return malloc_usable_size(ptr);
 #else
@@ -270,6 +272,8 @@ static const JSMallocFunctions trace_mf = {
     (size_t (*)(const void *))_msize,
 #elif defined(EMSCRIPTEN)
     NULL,
+#elif defined(__nyx__)
+    NULL,
 #elif defined(__linux__)
     (size_t (*)(const void *))malloc_usable_size,
 #else
diff --git quickjs-clean/quickjs-libc.c quickjs-workdir/quickjs-libc.c
index e180dd0..5136a9d 100644
--- quickjs-clean/quickjs-libc.c
+++ quickjs-workdir/quickjs-libc.c
@@ -57,6 +57,10 @@ typedef sig_t sighandler_t;
 
 #endif
 
+#if defined(__nyx__)
+    typedef void (*sighandler_t)(int);
+#endif
+
 #if !defined(_WIN32)
 /* enable the os.Worker API. IT relies on POSIX threads */
 #define USE_WORKER
diff --git quickjs-clean/quickjs.c quickjs-workdir/quickjs.c
index 48aeffc..f0cbb33 100644
--- quickjs-clean/quickjs.c
+++ quickjs-workdir/quickjs.c
@@ -1682,6 +1682,8 @@ static inline size_t js_def_malloc_usable_size(void *ptr)
     return _msize(ptr);
 #elif defined(EMSCRIPTEN)
     return 0;
+#elif defined(__nyx__)
+    return 0;
 #elif defined(__linux__)
     return malloc_usable_size(ptr);
 #else
@@ -1756,6 +1758,8 @@ static const JSMallocFunctions def_malloc_funcs = {
     (size_t (*)(const void *))_msize,
 #elif defined(EMSCRIPTEN)
     NULL,
+#elif defined(__nyx__)
+    NULL,
 #elif defined(__linux__)
     (size_t (*)(const void *))malloc_usable_size,
 #else